#@(#) script.ddl

DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS PARTS_USED;
DROP TABLE IF EXISTS ORDERED_SERVICE;
DROP TABLE IF EXISTS BILL;
DROP TABLE IF EXISTS CONTRACT;
DROP TABLE IF EXISTS WORKER;
DROP TABLE IF EXISTS PARTS;
DROP TABLE IF EXISTS GARAGE;
DROP TABLE IF EXISTS CITY;
DROP TABLE IF EXISTS WORKER_STATUS;
DROP TABLE IF EXISTS GENDER;
DROP TABLE IF EXISTS GARAGE_TYPE;
DROP TABLE IF EXISTS CITY_TYPE;
DROP TABLE IF EXISTS SERVICE;
DROP TABLE IF EXISTS CLIENT;

CREATE TABLE CLIENT
(
	personal_code bigint NOT NULL,
	name varchar (255) NOT NULL,
	surname varchar (255) NOT NULL,
	birth_date date NOT NULL,
	phone_number integer NOT NULL,
	email varchar (255) NOT NULL,
	client_since date NOT NULL,
	PRIMARY KEY(personal_code)
);

CREATE TABLE SERVICE
(
	name varchar (255) NOT NULL,
	price double precision NOT NULL,
	duration_days int NOT NULL,
	id_SERVICE integer NOT NULL,
	PRIMARY KEY(id_SERVICE)
);

CREATE TABLE CITY_TYPE
(
	id_CITY_TYPE integer NOT NULL,
	name char (7) NOT NULL,
	PRIMARY KEY(id_CITY_TYPE)
);
INSERT INTO CITY_TYPE(id_CITY_TYPE, name) VALUES(1, 'village')
INSERT INTO CITY_TYPE(id_CITY_TYPE, name) VALUES(2, 'town')
INSERT INTO CITY_TYPE(id_CITY_TYPE, name) VALUES(3, 'city')

CREATE TABLE GARAGE_TYPE
(
	id_GARAGE_TYPE integer NOT NULL,
	name char (17) NOT NULL,
	PRIMARY KEY(id_GARAGE_TYPE)
);
INSERT INTO GARAGE_TYPE(id_GARAGE_TYPE, name) VALUES(1, 'repair shop')
INSERT INTO GARAGE_TYPE(id_GARAGE_TYPE, name) VALUES(2, 'installation shop')
INSERT INTO GARAGE_TYPE(id_GARAGE_TYPE, name) VALUES(3, 'all in one shop')

CREATE TABLE GENDER
(
	id_GENDER integer NOT NULL,
	name char (6) NOT NULL,
	PRIMARY KEY(id_GENDER)
);
INSERT INTO GENDER(id_GENDER, name) VALUES(1, 'male')
INSERT INTO GENDER(id_GENDER, name) VALUES(2, 'female')
INSERT INTO GENDER(id_GENDER, name) VALUES(3, 'other')

CREATE TABLE WORKER_STATUS
(
	id_WORKER_STATUS integer NOT NULL,
	name char (15) NOT NULL,
	PRIMARY KEY(id_WORKER_STATUS)
);
INSERT INTO WORKER_STATUS(id_WORKER_STATUS, name) VALUES(1, 'working')
INSERT INTO WORKER_STATUS(id_WORKER_STATUS, name) VALUES(2, 'on holiday')
INSERT INTO WORKER_STATUS(id_WORKER_STATUS, name) VALUES(3, 'sick')
INSERT INTO WORKER_STATUS(id_WORKER_STATUS, name) VALUES(4, 'maternity leave')

CREATE TABLE CITY
(
	name varchar (255) NOT NULL,
	city_type integer NOT NULL,
	id_CITY integer NOT NULL,
	PRIMARY KEY(id_CITY),
	FOREIGN KEY(city_type) REFERENCES CITY_TYPE (id_CITY_TYPE)
);

CREATE TABLE GARAGE
(
	id int NOT NULL,
	name varchar (255) NOT NULL,
	address varchar (255) NOT NULL,
	built_date date NOT NULL,
	worker_capacity int NOT NULL,
	phone varchar (255) NOT NULL,
	email varchar (255) NOT NULL,
	garage_type integer NOT NULL,
	fk_CITY integer NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(garage_type) REFERENCES GARAGE_TYPE (id_GARAGE_TYPE),
	CONSTRAINT fkc_CITY FOREIGN KEY(fk_CITY) REFERENCES CITY (id_CITY)
);

CREATE TABLE PARTS
(
	id int NOT NULL,
	name varchar (255) NOT NULL,
	price double precision NOT NULL,
	count int NOT NULL,
	fk_GARAGE int NOT NULL,
	PRIMARY KEY(id),
	CONSTRAINT fkc_GARAGE FOREIGN KEY(fk_GARAGE) REFERENCES GARAGE (id)
);

CREATE TABLE WORKER
(
	id int NOT NULL,
	name varchar (255) NOT NULL,
	surname varchar (255) NOT NULL,
	phone_number varchar (255) NOT NULL,
	email varchar (255) NOT NULL,
	birth_date date NOT NULL,
	worker_status integer NOT NULL,
	gender integer NOT NULL,
	fk_GARAGE int NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(worker_status) REFERENCES WORKER_STATUS (id_WORKER_STATUS),
	FOREIGN KEY(gender) REFERENCES GENDER (id_GENDER),
	CONSTRAINT fkc_GARAGE2 FOREIGN KEY(fk_GARAGE) REFERENCES GARAGE (id)
);

CREATE TABLE CONTRACT
(
	id int NOT NULL,
	order_date date NOT NULL,
	repair_start_date date NOT NULL,
	expected_end_date date NOT NULL,
	real_end_date date NOT NULL,
	sum double precision NOT NULL,
	additional_costs double precision NOT NULL,
	fk_WORKER int NOT NULL,
	fk_CLIENT integer NOT NULL,
	PRIMARY KEY(id),
	CONSTRAINT fkc_WORKER FOREIGN KEY(fk_WORKER) REFERENCES WORKER (id),
	CONSTRAINT fkc_CLIENT FOREIGN KEY(fk_CLIENT) REFERENCES CLIENT (personal_code)
);

CREATE TABLE BILL
(
	number int NOT NULL,
	date date NOT NULL,
	sum double precision NOT NULL,
	fk_CONTRACT int NOT NULL,
	PRIMARY KEY(number),
	CONSTRAINT fkc_CONTRACT FOREIGN KEY(fk_CONTRACT) REFERENCES CONTRACT (id)
);

CREATE TABLE ORDERED_SERVICE
(
	count int NOT NULL,
	id_ORDERED_SERVICE integer NOT NULL,
	fk_SERVICE integer NOT NULL,
	fk_CONTRACT int NOT NULL,
	PRIMARY KEY(id_ORDERED_SERVICE),
	CONSTRAINT fkc_SERVICE FOREIGN KEY(fk_SERVICE) REFERENCES SERVICE (id_SERVICE),
	CONSTRAINT fkc_CONTRACT2 FOREIGN KEY(fk_CONTRACT) REFERENCES CONTRACT (id)
);

CREATE TABLE PARTS_USED
(
	id int NOT NULL,
	count int NOT NULL,
	fk_PARTS int NOT NULL,
	fk_CONTRACT int NOT NULL,
	PRIMARY KEY(id),
	CONSTRAINT fkc_PARTS FOREIGN KEY(fk_PARTS) REFERENCES PARTS (id),
	CONSTRAINT fkc_CONTRACT3 FOREIGN KEY(fk_CONTRACT) REFERENCES CONTRACT (id)
);

CREATE TABLE PAYMENT
(
	date date NOT NULL,
	sum double precision NOT NULL,
	id_PAYMENT integer NOT NULL,
	fk_BILL int NOT NULL,
	fk_CLIENT integer NOT NULL,
	PRIMARY KEY(id_PAYMENT),
	CONSTRAINT fkc_BILL FOREIGN KEY(fk_BILL) REFERENCES BILL (number),
	CONSTRAINT fkc_CLIENT2 FOREIGN KEY(fk_CLIENT) REFERENCES CLIENT (personal_code)
);
